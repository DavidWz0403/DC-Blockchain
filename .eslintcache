[{"C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\index.js":"1","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\App.js":"2","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\NavbarDC.js":"4","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\Dashboard.js":"5","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\class.js":"6","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\Login.js":"7","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\newAccount.js":"8","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\CreateKeys.js":"9","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\Account.js":"10","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\newCreatekeys.js":"11","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\transaction_class.js":"12"},{"size":500,"mtime":1607946313003,"results":"13","hashOfConfig":"14"},{"size":746,"mtime":1609779428922,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1607946313003,"results":"16","hashOfConfig":"14"},{"size":811,"mtime":1609345996275,"results":"17","hashOfConfig":"14"},{"size":1868,"mtime":1609001535241,"results":"18","hashOfConfig":"14"},{"size":226,"mtime":1609790600228,"results":"19","hashOfConfig":"14"},{"size":4242,"mtime":1609347220845,"results":"20","hashOfConfig":"14"},{"size":2539,"mtime":1609166308243,"results":"21","hashOfConfig":"14"},{"size":2623,"mtime":1609790647265,"results":"22","hashOfConfig":"14"},{"size":4143,"mtime":1609868891385,"results":"23","hashOfConfig":"14"},{"size":2824,"mtime":1609256712367,"results":"24","hashOfConfig":"14"},{"size":472,"mtime":1609790543713,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1yb5t50",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\index.js",[],["54","55"],"C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\App.js",[],"C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\NavbarDC.js",[],"C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\Dashboard.js",["56"],"import React, { Component } from 'react'\r\nimport { Button, Card, ListGroup } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            blocks: [],\r\n            id: 1,\r\n            hash: \"\",\r\n            previousHash: \"\",\r\n            nonce: 0,\r\n            timestamp: \"\",\r\n            transactions: []\r\n        }\r\n    }\r\n\r\n    //ComponentdidMount to display all the blocks \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Blocks on DC chain</h1>\r\n                <p> The latest 5 blocks on the chain: </p>\r\n                <Card style={{ width: '18rem' }}>\r\n                    <Card.Header><h2>{`Block ${this.state.id}`}</h2></Card.Header>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h4>Hash</h4>\r\n                            <br />\r\n                            {this.state.hash}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h4>Hash of previous Block</h4>\r\n                            <br />\r\n                            {this.state.previousHash}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h4>Nonce</h4>\r\n                            <br />\r\n                            {this.state.nonce}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h4>Timestamp</h4>\r\n                            <br />\r\n                            {this.state.timestamp}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard;","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\class.js",[],"C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\Login.js",["57","58","59","60"],"import React, { Component } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            pubInput: \"\",\r\n            privInput: \"\",\r\n            showSuccess: false,\r\n            variant: \"success\",\r\n            text: ''\r\n\r\n        }\r\n        const publicKey = this.props.pubKey;\r\n        const privateKey = this.props.privKey;\r\n        const userData = this.props.userData;\r\n    }\r\n\r\n\r\n    setPubInput = (e) => {\r\n        const input = e.target.value;\r\n        this.setState({\r\n            pubInput: input\r\n        })\r\n    }\r\n\r\n    setPrivInput = (e) => {\r\n        const input = e.target.value;\r\n        this.setState({\r\n            privInput: input\r\n        })\r\n    }\r\n\r\n\r\n    authentication = () => {\r\n        const userData = this.props.userData;\r\n        // this.props.userData.map(userData => {\r\n        //     if (this.state.pubInput === this.state.userData.publicKey &&\r\n        //         this.state.privInput === this.state.userData.privateKey) {\r\n        //         this.setState({\r\n        //             showSuccess: true,\r\n        //             text: 'Successful login',\r\n        //         })\r\n        //     } else {\r\n        //         this.setState({\r\n        //             showSuccess: true,\r\n        //             variant: \"warning\",\r\n        //             text: 'wrong key'\r\n        //         })\r\n        //     }\r\n        // })\r\n\r\n        // this.props.userData.forEach(userData => {\r\n        //     userData.user.forEach(user => {\r\n        //         if (user.publicKey === this.state.pubInput &&\r\n        //             user.privateKey === this.state.privInput) {\r\n        //             this.setState({\r\n        //                 showSuccess: true,\r\n        //                 text: 'Successful login',\r\n        //             })\r\n        //         }\r\n        //     })\r\n        // })\r\n        // recipes.forEach(recipe => {\r\n        //     recipe.ingredients.forEach(ingredient => {\r\n        //         if (ingredient.name == searchTerm) {\r\n        //             resultingRecipes.push(recipe)\r\n        //         }\r\n        //     })\r\n        // })\r\n        // if (this.state.pubInput === this.props.pubKey &&\r\n        //     this.state.privInput === this.props.privKey) {\r\n        //     this.setState({\r\n        //         showSuccess: true,\r\n        //         text: 'Successful login',\r\n        //     })\r\n        // } else {\r\n        //     this.setState({\r\n        //         showSuccess: true,\r\n        //         variant: \"warning\",\r\n        //         text: 'wrong key'\r\n        //     })\r\n        // }\r\n\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Alert variant={this.state.variant} show={this.state.showSuccess}>\r\n                    {this.state.text}\r\n                </Alert>\r\n                <Form>\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>Publicaddress:<span>*</span></Form.Label>\r\n                        <Form.Control value={this.state.pubInput}\r\n                            onChange={this.setPubInput} type=\"text\" required />\r\n                        <Form.Text className=\"text-muted\">\r\n                            The E-Mail address on which we will reply, <strong>won't be shared with any third parties!</strong>\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"textarea\">\r\n                        <Form.Label>Privatekey<span>*</span></Form.Label>\r\n                        <Form.Control value={this.state.privInput} onChange={this.setPrivInput} required />\r\n                        <Form.Text className=\"text-muted\">\r\n                            Place your message here, <strong>won't be shared with any third parties!</strong>\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <Button onClick={this.authentication}><Link to=\"/account\" >Log in</Link></Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\newAccount.js",["61"],"C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\CreateKeys.js",["62"],"import React, { Component } from 'react'\r\n// import { EC } from 'elliptic';\r\nimport { Button } from 'react-bootstrap';\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport User from './class';\r\nimport './CreateKeys.css';\r\nimport { Link } from 'react-router-dom';\r\nclass CreateKeys extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            publicKey: \"\",\r\n            privateKey: \"\",\r\n            showButton: false,\r\n            showAlert: false,\r\n            variant: \"warning\",\r\n            userData: [],\r\n            id: \"\",\r\n\r\n        }\r\n        this.user = User;\r\n    }\r\n\r\n\r\n    generateKeys = () => {\r\n\r\n        const EC = require('elliptic').ec;\r\n        const ec = new EC('secp256k1');\r\n        const key = ec.genKeyPair();\r\n        setTimeout(() => {\r\n            this.setState({\r\n                publicKey: key.getPublic('hex'),\r\n                privateKey: key.getPrivate('hex'),\r\n            })\r\n\r\n            this.generateUser();\r\n        }, 100)\r\n\r\n        console.log(\"privKey\")\r\n        console.log(this.state.privateKey);\r\n        console.log(\"pub key\")\r\n        console.log(this.state.publicKey);\r\n\r\n        //Post method\r\n\r\n    }\r\n\r\n    generateUser = () => {\r\n\r\n        let userId = this.state.id + 1;\r\n        const user = new User(this.state.id, this.state.publicKey,\r\n            this.state.privateKey, this.state.transactions = []);\r\n\r\n        const newUser = [...this.state.userData, user];\r\n        this.setState({\r\n            userData: newUser,\r\n            showAlert: true,\r\n            id: userId,\r\n        })\r\n        console.log(this.state.userData)\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"keys\">\r\n                <Alert variant={this.state.variant} show={this.state.showAlert}>\r\n                    Your public and private Key are unique. Make sure to store it safely.<br />\r\n                If you are losing one of them, you will never be able to access your account again!!!.\r\n                </Alert>\r\n                <p>Your id: {this.state.id}</p>\r\n                <p>Your public key: {this.state.publicKey}</p>\r\n                <p>Your private key: {this.state.privateKey}</p>\r\n                <Button variant=\"outline-info\"\r\n                    onClick={this.generateKeys}\r\n                    disabled={this.state.showButton}>\r\n                    Generate Wallet\r\n                </Button>\r\n                <Button variant=\"outline-info\">\r\n                    <Link to=\"/login\" >Return to login</Link>\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CreateKeys; ","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\Account.js",[],"C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\newCreatekeys.js",["63","64"],"C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\transaction_class.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":2,"column":10,"nodeType":"71","messageId":"72","endLine":2,"endColumn":16},{"ruleId":"69","severity":1,"message":"73","line":19,"column":15,"nodeType":"71","messageId":"72","endLine":19,"endColumn":24},{"ruleId":"69","severity":1,"message":"74","line":20,"column":15,"nodeType":"71","messageId":"72","endLine":20,"endColumn":25},{"ruleId":"69","severity":1,"message":"75","line":21,"column":15,"nodeType":"71","messageId":"72","endLine":21,"endColumn":23},{"ruleId":"69","severity":1,"message":"75","line":41,"column":15,"nodeType":"71","messageId":"72","endLine":41,"endColumn":23},{"ruleId":"69","severity":1,"message":"76","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":12},{"ruleId":"77","severity":1,"message":"78","line":53,"column":36,"nodeType":"79","endLine":53,"endColumn":46},{"ruleId":"80","severity":2,"message":"81","line":80,"column":38,"nodeType":"71","messageId":"82","endLine":80,"endColumn":47},{"ruleId":"80","severity":2,"message":"83","line":81,"column":39,"nodeType":"71","messageId":"82","endLine":81,"endColumn":49},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'publicKey' is assigned a value but never used.","'privateKey' is assigned a value but never used.","'userData' is assigned a value but never used.","'User' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-undef","'publicKey' is not defined.","undef","'privateKey' is not defined.","no-global-assign","no-unsafe-negation"]