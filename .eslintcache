[{"C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\index.js":"1","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\App.js":"2","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\NavbarDC.js":"4","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\Dashboard.js":"5","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\class.js":"6","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\Login.js":"7","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\newAccount.js":"8","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\CreateKeys.js":"9","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\Account.js":"10","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\newCreatekeys.js":"11","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\transaction_class.js":"12","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\BlockchainAPI.js":"13","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\reducers\\app.reducers.js":"14","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\actions\\app.action.js":"15"},{"size":714,"mtime":1610638351023,"results":"16","hashOfConfig":"17"},{"size":746,"mtime":1609779428922,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1607946313003,"results":"19","hashOfConfig":"17"},{"size":811,"mtime":1609345996275,"results":"20","hashOfConfig":"17"},{"size":1868,"mtime":1609001535241,"results":"21","hashOfConfig":"17"},{"size":196,"mtime":1610109205922,"results":"22","hashOfConfig":"17"},{"size":3798,"mtime":1611249141990,"results":"23","hashOfConfig":"17"},{"size":2539,"mtime":1609166308243,"results":"24","hashOfConfig":"17"},{"size":3039,"mtime":1610367040664,"results":"25","hashOfConfig":"17"},{"size":5722,"mtime":1612015678854,"results":"26","hashOfConfig":"17"},{"size":2824,"mtime":1609256712367,"results":"27","hashOfConfig":"17"},{"size":472,"mtime":1609790543713,"results":"28","hashOfConfig":"17"},{"size":808,"mtime":1610115962029,"results":"29","hashOfConfig":"17"},{"size":778,"mtime":1612014674843,"results":"30","hashOfConfig":"17"},{"size":358,"mtime":1612014595793,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1yb5t50",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\index.js",[],["66","67"],"C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\App.js",[],"C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\NavbarDC.js",[],"C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\Dashboard.js",["68"],"import React, { Component } from 'react'\r\nimport { Button, Card, ListGroup } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            blocks: [],\r\n            id: 1,\r\n            hash: \"\",\r\n            previousHash: \"\",\r\n            nonce: 0,\r\n            timestamp: \"\",\r\n            transactions: []\r\n        }\r\n    }\r\n\r\n    //ComponentdidMount to display all the blocks \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Blocks on DC chain</h1>\r\n                <p> The latest 5 blocks on the chain: </p>\r\n                <Card style={{ width: '18rem' }}>\r\n                    <Card.Header><h2>{`Block ${this.state.id}`}</h2></Card.Header>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h4>Hash</h4>\r\n                            <br />\r\n                            {this.state.hash}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h4>Hash of previous Block</h4>\r\n                            <br />\r\n                            {this.state.previousHash}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h4>Nonce</h4>\r\n                            <br />\r\n                            {this.state.nonce}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h4>Timestamp</h4>\r\n                            <br />\r\n                            {this.state.timestamp}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard;","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\class.js",[],"C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\Login.js",["69","70","71","72","73"],"import React, { Component } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport { Link } from 'react-router-dom';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as actions from '../actions/app.action';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            pubInput: \"\",\r\n            privInput: \"\",\r\n            showSuccess: false,\r\n            variant: \"success\",\r\n            text: '',\r\n            value: false,\r\n            to: false,\r\n            id: \"\",\r\n            balance: 0\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setPubInput = (e) => {\r\n        const input = e.target.value;\r\n        this.setState({\r\n            pubInput: input\r\n        })\r\n    }\r\n\r\n    setPrivInput = (e) => {\r\n        const input = e.target.value;\r\n        this.setState({\r\n            privInput: input\r\n        })\r\n    }\r\n    authentication = async () => {\r\n\r\n        // get users from the api\r\n\r\n        try {\r\n            const response = await axios.get(`http://localhost:4000/users`);\r\n            const user = response.data;\r\n            console.log(user);\r\n            user.map(user => {\r\n                if (user.publicKey === this.state.pubInput &&\r\n                    user.privateKey === this.state.privInput) {\r\n                    const currentUser = user;\r\n                    this.props.actions.storeUserData(currentUser)\r\n                    this.props.history.push(\"/account\")\r\n                    this.setState({\r\n                        value: true,\r\n\r\n\r\n                    })\r\n\r\n                }\r\n\r\n\r\n            })\r\n\r\n            if (this.state.value = false) {\r\n                this.setState({\r\n                    to: \"/empty\"\r\n                })\r\n            }\r\n        } catch (err) {\r\n            console.log('Error: ' + err)\r\n        }\r\n\r\n        console.log('hello world')\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Alert variant={this.state.variant} show={this.state.showSuccess}>\r\n                    {this.state.text}\r\n                </Alert>\r\n                <Form>\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>Publicaddress:<span>*</span></Form.Label>\r\n                        <Form.Control value={this.state.pubInput}\r\n                            onChange={this.setPubInput} type=\"text\" required />\r\n                        <Form.Text className=\"text-muted\">\r\n                            The E-Mail address on which we will reply, <strong>won't be shared with any third parties!</strong>\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"textarea\">\r\n                        <Form.Label>Privatekey<span>*</span></Form.Label>\r\n                        <Form.Control value={this.state.privInput} onChange={this.setPrivInput} required />\r\n                        <Form.Text className=\"text-muted\">\r\n                            Place your message here, <strong>won't be shared with any third parties!</strong>\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <Button onClick={this.authentication}>\r\n                        <Link to={this.state.to} value={false} >Log in</Link></Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({ applicationState: state });\r\nconst mapDispatchToProps = dispatch => ({ actions: bindActionCreators(actions, dispatch) });\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\newAccount.js",["74"],"C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\CreateKeys.js",["75"],"import React, { Component } from 'react'\r\nimport { Button } from 'react-bootstrap';\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport User from './class';\r\nimport BlockchainAPI from './BlockchainAPI';\r\nimport axios from 'axios';\r\nimport './CreateKeys.css';\r\nimport { Link } from 'react-router-dom';\r\nclass CreateKeys extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            publicKey: \"\",\r\n            privateKey: \"\",\r\n            showButton: false,\r\n            showAlert: false,\r\n            variant: \"warning\",\r\n            balance: 100,\r\n\r\n        }\r\n        this.user = User;\r\n        this.api = BlockchainAPI;\r\n    }\r\n\r\n\r\n    generateKeys = async () => {\r\n\r\n        const EC = require('elliptic').ec;\r\n        const ec = new EC('secp256k1');\r\n        const key = ec.genKeyPair();\r\n        setTimeout(async () => {\r\n            this.setState({\r\n                publicKey: key.getPublic('hex'),\r\n                privateKey: key.getPrivate('hex'),\r\n                showButton: true,\r\n            })\r\n\r\n            const user = {\r\n                publicKey: this.state.publicKey,\r\n                privateKey: this.state.privateKey,\r\n                balance: this.state.balance\r\n            }\r\n\r\n            try {\r\n                const response = await axios.post('http://localhost:4000/users/add', user);\r\n                console.log(response.data);\r\n            } catch (err) {\r\n                console.log('Error: ' + err)\r\n            }\r\n        }, 100)\r\n\r\n\r\n\r\n        // this.postUserData(user);\r\n\r\n        //Post method\r\n\r\n    }\r\n\r\n    postUserData = async (user) => {\r\n        try {\r\n            const response = await axios.post(`http:localhost:4000/users/add`, user);\r\n            console.log(response.data);\r\n        } catch (err) {\r\n            console.log('Error: ' + err)\r\n        }\r\n    }\r\n\r\n    generateUser = () => {\r\n        const user = {\r\n            publicKey: this.state.publicKey,\r\n            privateKey: this.state.privateKey,\r\n            balance: this.state.balance\r\n        }\r\n\r\n        return this.state.user;\r\n\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"keys\">\r\n                <Alert variant={this.state.variant} show={this.state.showAlert}>\r\n                    Your public and private Key are unique. Make sure to store it safely.<br />\r\n                If you are losing one of them, you will never be able to access your account again!!!.\r\n                </Alert>\r\n                <p>Your public key: {this.state.publicKey}</p>\r\n                <p>Your private key: {this.state.privateKey}</p>\r\n                <Button variant=\"outline-info\"\r\n                    onClick={this.generateKeys}\r\n                    disabled={this.state.showButton}>\r\n                    Generate Wallet\r\n                </Button>\r\n                <Button variant=\"outline-info\">\r\n                    <Link to=\"/login\" >Return to login</Link>\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CreateKeys; ","C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\Account.js",["76"],"C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\newCreatekeys.js",["77","78"],"C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\transaction_class.js",[],"C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\Components\\BlockchainAPI.js",[],"C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\reducers\\app.reducers.js",["79"],"C:\\Users\\DavidWZ\\Documents\\TalentGarden\\BlockchainProjectDavidClaudio\\Frontend\\blockchain-frontend\\src\\actions\\app.action.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":2,"column":10,"nodeType":"86","messageId":"87","endLine":2,"endColumn":16},{"ruleId":"84","severity":1,"message":"88","line":6,"column":27,"nodeType":"86","messageId":"87","endLine":6,"endColumn":33},{"ruleId":"84","severity":1,"message":"89","line":6,"column":35,"nodeType":"86","messageId":"87","endLine":6,"endColumn":40},{"ruleId":"84","severity":1,"message":"90","line":6,"column":42,"nodeType":"86","messageId":"87","endLine":6,"endColumn":48},{"ruleId":"91","severity":1,"message":"92","line":52,"column":27,"nodeType":"93","messageId":"94","endLine":52,"endColumn":29},{"ruleId":"95","severity":1,"message":"96","line":69,"column":17,"nodeType":"97","messageId":"98","endLine":69,"endColumn":41},{"ruleId":"84","severity":1,"message":"99","line":5,"column":8,"nodeType":"86","messageId":"87","endLine":5,"endColumn":12},{"ruleId":"84","severity":1,"message":"100","line":71,"column":15,"nodeType":"86","messageId":"87","endLine":71,"endColumn":19},{"ruleId":"84","severity":1,"message":"101","line":5,"column":8,"nodeType":"86","messageId":"87","endLine":5,"endColumn":19},{"ruleId":"102","severity":2,"message":"103","line":80,"column":38,"nodeType":"86","messageId":"104","endLine":80,"endColumn":47},{"ruleId":"102","severity":2,"message":"105","line":81,"column":39,"nodeType":"86","messageId":"104","endLine":81,"endColumn":49},{"ruleId":"106","severity":1,"message":"107","line":12,"column":5,"nodeType":"108","messageId":"109","endLine":25,"endColumn":6},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'User' is defined but never used.","'user' is assigned a value but never used.","'Transaction' is defined but never used.","no-undef","'publicKey' is not defined.","undef","'privateKey' is not defined.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]